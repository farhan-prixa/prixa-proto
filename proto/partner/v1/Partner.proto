syntax = "proto3";

package prixa.partner.v1;
import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "github.com/mwitkow/go-proto-validators/validator.proto";

service PartnerService {
    rpc CreatePartner (CreatePartnerRequest) returns (CreatePartnerResponse){
        option (google.api.http) = {
            post: "/api/v1/partner"
            body: "*"
        };
    }
    rpc DeletePartner (DeletePartnerRequest) returns (DeletePartnerResponse){
        option (google.api.http) = {
            delete: "/api/v1/partner/{partnerId}"
        };
    }
    rpc UpdatePartner (UpdatePartnerRequest) returns (UpdatePartnerResponse){
        option (google.api.http) = {
            put: "/api/v1/partner/{partnerId}"
            body: "*"
        };
    }
    rpc GetPartner (GetPartnerRequest) returns (GetPartnerResponse){
        option (google.api.http) = {
            get: "/api/v1/partner/{partnerId}"
        };
    }
    rpc ListPartners (ListPartnersRequest) returns (ListPartnersResponse){
        option (google.api.http) = {
            get: "/api/v1/partner"
        };
    }
}


message PartnerResponseData {
    string id = 1 [(validator.field) = {uuid_ver: 4, string_not_empty: true}];
    string name = 2 [(validator.field) = {string_not_empty: true}];
    string status = 3 [(validator.field) = {string_not_empty: true}];
    repeated string appIds = 4;
    google.protobuf.Timestamp createdAt = 5;
    google.protobuf.Timestamp updatedAt = 6;
}

message CreatePartnerRequest {
    string name = 1 [(validator.field) = {string_not_empty: true}];
}

message CreatePartnerResponse {
    PartnerResponseData data = 1;
}

message DeletePartnerRequest {
    string partnerId = 1 [(validator.field) = {uuid_ver: 4, string_not_empty: true}];
}

message DeletePartnerResponse {
    PartnerResponseData data = 1;
}

message UpdatePartnerRequest {
    string name = 1 [(validator.field) = {string_not_empty: true}];
    string partnerId = 2 [(validator.field) = {uuid_ver: 4, string_not_empty: true}];
}

message UpdatePartnerResponse {
    PartnerResponseData data = 1;
}

message GetPartnerRequest {
    string partnerId = 1 [(validator.field) = {uuid_ver: 4, string_not_empty: true}];
}

message GetPartnerResponse {
    PartnerResponseData data = 1;
}

message PageProperty {
    int32 pageNo = 1;
    int32 totalPages = 2;
    int32 totalRecords = 3;
}

message ListPartnersRequest {
    int32 page = 1;
}

message ListPartnersResponse {
    repeated PartnerResponseData data = 1;
    PageProperty page = 2;
}
