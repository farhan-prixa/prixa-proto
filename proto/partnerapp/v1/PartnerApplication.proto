syntax = "proto3";

package prixa.partnerapplication.v1;
import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "github.com/mwitkow/go-proto-validators/validator.proto";

service PartnerApplicationService {
    rpc CreatePartnerApplication (CreatePartnerApplicationRequest) returns (CreatePartnerApplicationResponse){
        option (google.api.http) = {
            post: "/api/v1/partner/{partnerId}/application"
            body: "*"
        };
    }
    rpc DeletePartnerApplication (DeletePartnerApplicationRequest) returns (DeletePartnerApplicationResponse){
        option (google.api.http) = {
            post: "/api/v1/partner/{partnerId}/application/{applicationId}"
            body: "*"
        };
    }
    rpc UpdatePartnerApplication (UpdatePartnerApplicationRequest) returns (UpdatePartnerApplicationResponse){
        option (google.api.http) = {
            post: "/api/v1/partner/{partnerId}/application/{applicationId}"
            body: "*"
        };
    }
    rpc GetPartnerApplication (GetPartnerApplicationRequest) returns (GetPartnerApplicationResponse){
        option (google.api.http) = {
            get: "/api/v1/partner/{partnerId}/application/{applicationId}"
        };
    }
    rpc ListPartnerApplications (ListPartnerApplicationsRequest) returns (ListPartnerApplicationsResponse){
        option (google.api.http) = {
            post: "/api/v1/partner/{partnerId}/application"
            body: "*"
        };
    }
}

message PartnerAppResponseData {
    string id = 1 [(validator.field) = {uuid_ver: 4, string_not_empty: true}];
    string name = 2 [(validator.field) = {string_not_empty: true}];
    string status = 3 [(validator.field) = {string_not_empty: true}];
    string secretKey = 4 [(validator.field) = {string_not_empty: true}];
    google.protobuf.Timestamp createdAt = 5;
    google.protobuf.Timestamp updatedAt = 6;
}

message CreatePartnerApplicationRequest {
    string name = 1 [(validator.field) = {string_not_empty: true}];
    string partnerId = 2 [(validator.field) = {uuid_ver: 4, string_not_empty: true}];
}

message CreatePartnerApplicationResponse {
    PartnerAppResponseData data = 1;
}

message DeletePartnerApplicationRequest {
    string partnerId = 1 [(validator.field) = {uuid_ver: 4, string_not_empty: true}];
    string applicationId = 2 [(validator.field) = {uuid_ver: 4, string_not_empty: true}];
}

message DeletePartnerApplicationResponse {
    PartnerAppResponseData data = 1;
}

message UpdatePartnerApplicationRequest {
    string name = 1 [(validator.field) = {string_not_empty: true}];
    string partnerId = 2 [(validator.field) = {uuid_ver: 4, string_not_empty: true}];
    string applicationId = 3 [(validator.field) = {uuid_ver: 4, string_not_empty: true}];
}

message UpdatePartnerApplicationResponse {
    PartnerAppResponseData data = 1;
}

message GetPartnerApplicationRequest {
    string partnerId = 1 [(validator.field) = {uuid_ver: 4, string_not_empty: true}];
    string applicationId = 2 [(validator.field) = {uuid_ver: 4, string_not_empty: true}];
}

message GetPartnerApplicationResponse {
    PartnerAppResponseData data = 1;
}

message ListPartnerApplicationsRequest {
    string partnerId = 1 [(validator.field) = {uuid_ver: 4, string_not_empty: true}];
}

message ListPartnerApplicationsResponse {
    PartnerAppResponseData data = 1;
}
