syntax = "proto3";

package prixa.partnerapplication.v1;
import "proto/partner/v1/Timestamp.proto";
import "google/api/annotations.proto";

service PartnerApplicationService {
    rpc CreatePartnerApplication (CreatePartnerApplicationRequest) returns (CreatePartnerApplicationResponse){
        option (google.api.http) = {
            post: "/api/v1/partner/{partnerId}/application"
            body: "*"
        };
    }
    rpc DeletePartnerApplication (DeletePartnerApplicationRequest) returns (DeletePartnerApplicationResponse){
        option (google.api.http) = {
            post: "/api/v1/partner/{partnerId}/application/{applicationId}"
            body: "*"
        };
    }
    rpc UpdatePartnerApplication (UpdatePartnerApplicationRequest) returns (UpdatePartnerApplicationResponse){
        option (google.api.http) = {
            post: "/api/v1/partner/{partnerId}/application/{applicationId}"
            body: "*"
        };
    }
    rpc GetPartnerApplication (GetPartnerApplicationRequest) returns (GetPartnerApplicationResponse){
        option (google.api.http) = {
            get: "/api/v1/partner/{partnerId}/application/{applicationId}"
        };
    }
    rpc ListPartnerApplications (ListPartnerApplicationsRequest) returns (ListPartnerApplicationsResponse){
        option (google.api.http) = {
            post: "/api/v1/partner/{partnerId}/application"
            body: "*"
        };
    }
}

message PartnerAppResponseData {
    string id = 1;
    string name = 2;
    string status = 3;
    string secretKey = 4;
    prixa.timestamp.v1.DataTimestamp dataTimestamp = 5;
}

message CreatePartnerApplicationRequest {
    string name = 1;
    string partnerId = 2;
}

message CreatePartnerApplicationResponse {
    PartnerAppResponseData data = 1;
}

message DeletePartnerApplicationRequest {
    string partnerId = 1;
    string applicationId = 2;
}

message DeletePartnerApplicationResponse {
    PartnerAppResponseData data = 1;
}

message UpdatePartnerApplicationRequest {
    string name = 1;
    string partnerId = 2;
    string applicationId = 3;
}

message UpdatePartnerApplicationResponse {
    PartnerAppResponseData data = 1;
}

message GetPartnerApplicationRequest {
    string partnerId = 1;
    string applicationId = 2;
}

message GetPartnerApplicationResponse {
    PartnerAppResponseData data = 1;
}

message ListPartnerApplicationsRequest {
    string partnerId = 1;
}

message ListPartnerApplicationsResponse {
    PartnerAppResponseData data = 1;
}
